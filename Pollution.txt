//Pollution.vue

<script setup>

    import { useLangStore } from '@/stores/lang'
    const lang = useLangStore();
    const maskMessage = ref('');

    defineProps({
        lat: Number,
        lon: Number
    })

    const fetchPollutionData = async () => {
        try {
            const response = await fetch(`http://localhost:8080/air_pollution?lat=${latitude.value}&lon=${longitude.value}`);
            const data = await response.json();

            if (response.ok) {
                generatePollutionInfo(data);
            } else {
                console.error('Error: Pollution data is not in the expected format.');
            }
        } catch (error) {
            console.error('Error fetching pollution data:', error);
        }
    };

    // Helper function to interact with DOM
    function generatePollutionInfo(jsonData) {
        const dateList = document.getElementById('pollutionDateList');
        dateList.innerHTML = '';

        const datesAbove10 = jsonData.list
            .filter(item => item.components.pm2_5 > 10)
            .map(item => formatDate(item.dt));

        if (datesAbove10.length > 0) {

            datesAbove10.forEach(date => {
                const li = document.createElement('li');
                li.textContent = `Date with pm2.5 above 10: ${date}`;
                dateList.appendChild(li);
            });

            maskMessage.value = 'High pm2_5 levels in atmosphere. Consider bringing a mask!';
        }
        else {
            maskMessage.value = 'Low pm2_5 levels in atmosphere. No need to bring a mask.';
        }
    }

    // Helper function to make legible date
    function formatDate(timestamp) {
        const date = new Date(timestamp * 1000);
        return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;
    }

</script>

<template>
    <h1>Pollution information for lat {{ lat }} and longitude {{ lon }}</h1>
    <ul id="pollutionDateList">
    </ul>
    <p> {{ maskMessage }}</p>
</template>